{"version":3,"sources":["components/Header/Header.js","components/MortgageOffer/functions/toRoubles.js","components/MortgageOffer/MortgageOffer.js","components/MortgageOffer/functions/calcMonthPayment.js","components/MortgageOffer/functions/decoratePercent.js","components/Titles/Titles.js","components/Filter/Filter.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","download","toRoubles","number","arrFromNumber","Math","floor","toString","split","reverse","result","i","length","push","join","realtyTypesTranslation","flatNew","flatSecondary","houseOrTownhouse","houseBuilding","repair","garage","MortgageOffer","minRate","companyName","realtyTypes","minDeposit","name","companySiteUrl","companyLogoUrl","amount","term","firstPayment","Number","rate","p","x","monthPayment","total","overpayment","calcMonthPayment","useState","detailed","getDetails","variable","src","alt","map","key","digit","Array","from","decoratePercent","id","onClick","prev","Titles","mortgageData","title","maxAmount","termTo","Filter","setFilters","creditAmount","setCreditAmount","terms","setTerms","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","App","filters","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6srDAGO,SAASA,IACd,OACE,yBAAKC,UAAU,UACb,0BAAMA,UAAU,mBAAhB,+HACA,0BAAMA,UAAU,mBAAhB,uOAGA,yBAAKA,UAAU,2BACb,4BAAQA,UAAU,kCAAlB,8EAGA,uBAAGA,UAAU,+BAA+BC,KAAK,UAAUC,UAAQ,GAAnE,qM,MCdD,SAASC,EAAUC,GAIxB,IAFA,IAAMC,GADND,EAASE,KAAKC,MAAMH,IACSI,WAAWC,MAAM,IAAIC,UAC5CC,EAAS,GACNC,EAAIP,EAAcQ,OAAS,EAAGD,GAAK,EAAGA,IAC7CD,EAAOG,KAAKT,EAAcO,IACtBA,EAAI,IAAM,GACZD,EAAOG,KAAK,KAGhB,OAAOH,EAAOI,KAAK,IAAM,SCJ3B,IAAMC,EAAyB,CAC7BC,QAAS,6HACTC,cAAe,iHACfC,iBAAkB,yFAClBC,cAAe,oJACfC,OAAQ,uCACRC,OAAQ,kCAGH,SAASC,EAAT,GAUH,IATFC,EASC,EATDA,QACAC,EAQC,EARDA,YACAC,EAOC,EAPDA,YACAC,EAMC,EANDA,WACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,eACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,OACAC,EACC,EADDA,KAEMC,EAAgBF,EAASG,OAAOP,GAAe,IADpD,ECzBI,SAA0BI,EAAQC,EAAMG,GAC7C,IAAMC,EAAID,EAAO,IAAM,GACjBE,EAAC,SAAI,EAAID,EAAMJ,GAEfM,EAAehC,KAAKC,MAAOwB,EAASK,EAAIC,GAAMA,EAAI,IAClDE,EAAQD,EAAeN,EAG7B,MAAO,CACLM,eACAC,QACAC,YALkBD,EAAQR,GDqBUU,CACpCV,EAASE,EACTD,EACAR,GAHMc,EAFP,EAEOA,aAAcE,EAFrB,EAEqBA,YAFrB,EAQ8BE,oBAAS,GARvC,mBAQMC,EARN,KAQgBC,EARhB,KAYD,IAAMC,EAAWF,EACb,2CACA,4CACJ,OACE,oCACE,yBAAK3C,UAAU,kBACb,yBAAKA,UAAU,mCACb,yBACE8C,IAAKhB,EACLiB,IAAI,4EACJ/C,UAAU,wCAEZ,0BAAMA,UAAU,iDACb4B,GAEH,0BAAM5B,UAAU,6CACbyB,GAEH,yBAAKzB,UAAU,eACZ0B,EAAYsB,KAAI,SAACC,GAAD,OACf,0BAAMjD,UAAU,oBAAoBiD,IAAKA,GACtCjC,EAAuBiC,SAKhC,yBAAKjD,UAAU,8BACb,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,4DEjEpB,SAAyBkD,GAG9B,IAFA,IACMvC,EAAS,GACf,MAFqBwC,MAAMC,KAAK,GAAKF,GAErC,eAA4B,CAAvB,IAAItC,EAAC,KACE,MAANA,IACFA,EAAI,KAEND,EAAOG,KAAKF,GAEd,OAAOD,EAAOI,KAAK,IAAM,KFyDZsC,CAAgB7B,IAEnB,yBAAKxB,UAAU,iEAAf,sGAIF,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,4DACZG,EAAUmC,IAEb,yBAAKtC,UAAU,iEAAf,4GAIF,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,6HACZG,EAAU8B,IAEb,yBAAKjC,UAAU,iEAAf,wHAIF,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,6HACZG,EAAU4B,EAASE,IAEtB,yBAAKjC,UAAU,iEAAf,8EAIF,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,6HACZG,EAAUqC,IAEb,yBAAKxC,UAAU,iEAAf,2FAKJ,yBAAKA,UAAU,0BACb,uBACEC,KAAM4B,EACN7B,UAAU,8BACVsD,GAAIT,EACJU,QA5EV,WACEX,GAAW,SAACY,GAAD,OAAWA,OAuEhB,6D,WGtGH,SAASC,EAAT,GAAmC,IAAjBzB,EAAgB,EAAhBA,KAAMD,EAAU,EAAVA,OAC7B,OAAO2B,EAAaV,KAAI,SAACW,GAAD,OACtB,kBAACpC,EAAD,CACEQ,OAAQA,EACRC,KAAMA,EACNR,QAASmC,EAAMnC,QACfC,YAAakC,EAAMlC,YACnBC,YAAaiC,EAAMjC,YACnBkC,UAAWD,EAAMC,UACjBjC,WAAYgC,EAAMhC,WAClBC,KAAM+B,EAAM/B,KACZiC,OAAQF,EAAME,OACdhC,eAAgB8B,EAAM9B,eACtBC,eAAgB6B,EAAM7B,eACtBmB,IAAKU,EAAML,Q,MCfV,SAASQ,EAAT,GAAiC,IAAfC,EAAc,EAAdA,WAAc,EACGrB,mBAAS,IADZ,mBAC9BsB,EAD8B,KAChBC,EADgB,OAEXvB,mBAAS,IAFE,mBAE9BwB,EAF8B,KAEvBC,EAFuB,KAcrC,OACE,0BAAMnE,UAAU,UAAUoE,SAN5B,SAAsBC,GACpBA,EAAEC,iBACFP,EAAW,CAAE/B,KAAsB,GAAhBE,OAAOgC,GAAanC,OAAQG,OAAO8B,OAKpD,yBAAKhE,UAAU,oBACb,2BACEuE,QAAQ,+BACRvE,UAAU,8BAEV,0BAAMA,UAAU,iBAAhB,uGAEF,2BACEwE,KAAK,SACL5C,KAAK,cACL6C,MAAOT,EACPV,GAAG,+BACHtD,UAAU,iBACV0E,SA1BR,SAAkCL,GAChCJ,EAAgBI,EAAEM,OAAOF,UA2BrB,2BACEF,QAAQ,gCACRvE,UAAU,+BAEV,0BAAMA,UAAU,iBAAhB,yEAEF,2BACEwE,KAAK,SACL5C,KAAK,eACL6C,MAAOP,EACPZ,GAAG,gCACHtD,UAAU,iBACV0E,SArCR,SAA2BL,GACzBF,EAASE,EAAEM,OAAOF,WAuChB,yBAAKzE,UAAU,0BACb,4BAAQA,UAAU,gCAAgCwE,KAAK,UAAvD,6GC9BOI,MAff,WAAgB,IAAD,EACiBlC,mBAAS,CACrCV,KAAM,GACND,OAAQ,MAHG,mBACN8C,EADM,KACGd,EADH,KAMb,OACE,oCACE,kBAAChE,EAAD,MACA,kBAAC+D,EAAD,CAAQC,WAAYA,IACpB,kBAACN,EAAD,CAAQzB,KAAM6C,EAAQ7C,KAAMD,OAAQ8C,EAAQ9C,WCH9B+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9c12894c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\";\n\nexport function Header() {\n  return (\n    <div className='header'>\n      <span className='header__title-1'>Своя квартира ещё ближе</span>\n      <span className='header__title-2'>\n        Узнай одобренную сумму и процентную ставку\n      </span>\n      <div className='header__link-and-button'>\n        <button className='header__link-and-button_button'>\n          Сумма и ставка\n        </button>\n        <a className='header__link-and-button_link' href='cian.ru' download>\n          Единая онлайн анкета в топовые банки\n        </a>\n      </div>\n    </div>\n  );\n}\n","export function toRoubles(number) {\n  number = Math.floor(number);\n  const arrFromNumber = number.toString().split(\"\").reverse();\n  const result = [];\n  for (let i = arrFromNumber.length - 1; i >= 0; i--) {\n    result.push(arrFromNumber[i]);\n    if (i % 3 === 0) {\n      result.push(\" \");\n    }\n  }\n  return result.join(\"\") + \"₽\";\n}\n","import React, { useState } from \"react\";\nimport \"./mortgageOffer.css\";\nimport { calcMonthPayment } from \"./functions/calcMonthPayment.js\";\nimport { decoratePercent } from \"./functions/decoratePercent.js\";\nimport { toRoubles } from \"./functions/toRoubles.js\";\n\nconst realtyTypesTranslation = {\n  flatNew: \"квартира в новостройке\",\n  flatSecondary: \"квартира во вторичке\",\n  houseOrTownhouse: \"дом или таунхаус\",\n  houseBuilding: \"коммерческая недвижимость\",\n  repair: \"ремонт\",\n  garage: \"гараж\",\n};\n\nexport function MortgageOffer({\n  minRate,\n  companyName,\n  realtyTypes,\n  minDeposit,\n  name,\n  companySiteUrl,\n  companyLogoUrl,\n  amount,\n  term,\n}) {\n  const firstPayment = (amount * Number(minDeposit)) / 100;\n  const { monthPayment, overpayment } = calcMonthPayment(\n    amount - firstPayment,\n    term,\n    minRate\n  );\n\n  const [detailed, getDetails] = useState(false);\n  function handleClick() {\n    getDetails((prev) => !prev);\n  }\n  const variable = detailed\n    ? \"mortgage-block__footer_button-detailedOn\"\n    : \"mortgage-block__footer_button-detailedOff\";\n  return (\n    <>\n      <div className='mortgage-block'>\n        <div className='mortgage-block__logo-and-titles'>\n          <img\n            src={companyLogoUrl}\n            alt='Логотип банка'\n            className='mortgage-block__logo-and-titles_img'\n          />\n          <span className='mortgage-block__logo-and-titles_mortgage-name'>\n            {name}\n          </span>\n          <span className='mortgage-block__logo-and-titles_bank-name'>\n            {companyName}\n          </span>\n          <div className='realtyTypes'>\n            {realtyTypes.map((key) => (\n              <span className='realtyTypes__item' key={key}>\n                {realtyTypesTranslation[key]}\n              </span>\n            ))}\n          </div>\n        </div>\n        <div className='mortgage-block__calculator'>\n          <div className='mortgage-block__calculator_digits-and-description'>\n            <div className='mortgage-block__calculator_digits-and-description_digits'>\n              {decoratePercent(minRate)}\n            </div>\n            <div className='mortgage-block__calculator_digits-and-description_description'>\n              процентная ставка\n            </div>\n          </div>\n          <div className='mortgage-block__calculator_digits-and-description'>\n            <div className='mortgage-block__calculator_digits-and-description_digits'>\n              {toRoubles(monthPayment)}\n            </div>\n            <div className='mortgage-block__calculator_digits-and-description_description'>\n              ежемесячный платеж\n            </div>\n          </div>\n          <div className='mortgage-block__calculator_digits-and-description'>\n            <div className='mortgage-block__calculator_digits-and-description_digits mortgage-block__calculator_digits-and-description_digits-smaller'>\n              {toRoubles(firstPayment)}\n            </div>\n            <div className='mortgage-block__calculator_digits-and-description_description'>\n              первоначальный взнос\n            </div>\n          </div>\n          <div className='mortgage-block__calculator_digits-and-description'>\n            <div className='mortgage-block__calculator_digits-and-description_digits mortgage-block__calculator_digits-and-description_digits-smaller'>\n              {toRoubles(amount - firstPayment)}\n            </div>\n            <div className='mortgage-block__calculator_digits-and-description_description'>\n              сумма кредита\n            </div>\n          </div>\n          <div className='mortgage-block__calculator_digits-and-description'>\n            <div className='mortgage-block__calculator_digits-and-description_digits mortgage-block__calculator_digits-and-description_digits-smaller'>\n              {toRoubles(overpayment)}\n            </div>\n            <div className='mortgage-block__calculator_digits-and-description_description'>\n              сумма процентов\n            </div>\n          </div>\n        </div>\n        <div className='mortgage-block__footer'>\n          <a\n            href={companySiteUrl}\n            className='mortgage-block__footer_link'\n            id={variable}\n            onClick={handleClick}\n          >\n            Подробнее\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n","export function calcMonthPayment(amount, term, rate) {\n  const p = rate / 100 / 12;\n  const x = (1 + p) ** term;\n\n  const monthPayment = Math.floor((amount * p * x) / (x - 1));\n  const total = monthPayment * term;\n  const overpayment = total - amount;\n\n  return {\n    monthPayment,\n    total,\n    overpayment,\n  };\n}\n","export function decoratePercent(digit) {\n  const arrFromDigit = Array.from(\"\" + digit);\n  const result = [];\n  for (let i of arrFromDigit) {\n    if (i === \".\") {\n      i = \",\";\n    }\n    result.push(i);\n  }\n  return result.join(\"\") + \" %\";\n}\n","import React from \"react\";\nimport { MortgageOffer } from \"../MortgageOffer/MortgageOffer.js\";\nimport mortgageData from \"./mortgageData.json\";\n\nexport function Titles({ term, amount }) {\n  return mortgageData.map((title) => (\n    <MortgageOffer\n      amount={amount}\n      term={term}\n      minRate={title.minRate}\n      companyName={title.companyName}\n      realtyTypes={title.realtyTypes}\n      maxAmount={title.maxAmount}\n      minDeposit={title.minDeposit}\n      name={title.name}\n      termTo={title.termTo}\n      companySiteUrl={title.companySiteUrl}\n      companyLogoUrl={title.companyLogoUrl}\n      key={title.id}\n    />\n  ));\n}\n","import React, { useState } from \"react\";\nimport \"./filter.css\";\n\nexport function Filter({ setFilters }) {\n  const [creditAmount, setCreditAmount] = useState(\"\");\n  const [terms, setTerms] = useState(\"\");\n  function handleChangeCreditAmount(e) {\n    setCreditAmount(e.target.value);\n  }\n  function handleChangeTerms(e) {\n    setTerms(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    setFilters({ term: Number(terms) * 12, amount: Number(creditAmount) });\n  }\n\n  return (\n    <form className='filters' onSubmit={handleSubmit}>\n      <div className='filters__wrapper'>\n        <label\n          htmlFor='filters__realtyPrice_labelId'\n          className='filters__realtyPrice_label'\n        >\n          <span className='filters__span'>Цена недвижимости:</span>\n        </label>\n        <input\n          type='number'\n          name='realtyPrice'\n          value={creditAmount}\n          id='filters__realtyPrice_labelId'\n          className='filters__input'\n          onChange={handleChangeCreditAmount}\n        ></input>\n        <label\n          htmlFor='filters__mortgageTerm_inputId'\n          className='filters__mortgageTerm_label'\n        >\n          <span className='filters__span'>Срок ипотеки:</span>\n        </label>\n        <input\n          type='number'\n          name='mortgageTerm'\n          value={terms}\n          id='filters__mortgageTerm_inputId'\n          className='filters__input'\n          onChange={handleChangeTerms}\n        ></input>\n      </div>\n      <div className='filters__buttonWrapper'>\n        <button className='filters__buttonWrapper_button' type='submit'>\n          Рассчитать ипотеку\n        </button>\n      </div>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Header } from \"./components/Header/Header\";\nimport { Titles } from \"./components/Titles/Titles\";\nimport { Filter } from \"./components/Filter/Filter\";\n\nfunction App() {\n  const [filters, setFilters] = useState({\n    term: 60,\n    amount: 2_000_000,\n  });\n\n  return (\n    <>\n      <Header />\n      <Filter setFilters={setFilters} />\n      <Titles term={filters.term} amount={filters.amount} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}